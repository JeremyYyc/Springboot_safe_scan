<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.safescan.mapper.ForumCommentMapper">
    <insert id="addComment" parameterType="org.safescan.DTO.ForumCommentDTO">
        insert into forum_comments(user_id, forum_id, parent_comment_id, content, create_time, update_time)
        values(#{userId}, #{forumId}, #{parentCommentId}, #{content}, #{createTime}, #{updateTime})
    </insert>

    <select id="getForumIdByCommentId" resultType="java.lang.Integer">
        select forum_id
        from forum_comments
        where comment_id = #{parentCommentId}
    </select>

    <select id="getState" resultType="java.lang.String">
        <choose>
            <when test="parentCommentId == null">
                select state
                from forums
                where forum_id = #{forumId}
            </when>

            <otherwise>
                select state
                from forum_comments
                where comment_id = #{parentCommentId}
            </otherwise>
        </choose>
    </select>

    <select id="getStateByCommentId" resultType="java.lang.String">
        select state
        from forum_comments
        where comment_id = #{commentId}
    </select>

    <update id="updateForums">
        update forums
        <set>
            <choose>
                <when test="state == 'comment'">
                    comment_count = comment_count + 1, update_time = #{updateTime}
                </when>

                <when test="state == 'delete'">
                    comment_count = comment_count - 1, update_time = #{updateTime}
                </when>
            </choose>
        </set>
        where forum_id = #{forumId}
    </update>

    <update id="updateForumComments">
        update forum_comments
        <set>
            <choose>
                <when test="state == 'comment'">
                    comment_count = comment_count + 1, update_time = #{updateTime}
                </when>

                <when test="state == 'delete'">
                    comment_count = comment_count - 1, update_time = #{updateTime}
                </when>
            </choose>
        </set>
        where comment_id = #{parentCommentId}
    </update>

    <select id="getByCommentId" resultType="org.safescan.DTO.ForumCommentDTO">
        select user_id, forum_id, parent_comment_id, state
        from forum_comments
        where comment_id = #{commentId}
    </select>

    <update id="deleteByForumCommentId">
        update forum_comments
        set state = 'Deleted', update_time = #{updateTime}
        <where>
            <if test="userId == null">
                forum_id = #{commentId}
            </if>

            <if test="userId != null">
                comment_id = #{commentId} and user_id = #{userId}
            </if>
        </where>
    </update>

    <select id="getLikedComment" resultType="org.safescan.DTO.ForumCommentDTO">
        select *
        from forum_likes
        where comment_id = #{commentId} and user_id = #{userId}
    </select>
    
    <insert id="addForumLikes">
        insert into forum_likes(comment_id, user_id, create_time)
        values(#{commentId}, #{userId}, #{createTime})
    </insert>

    <delete id="deleteForumLikes">
        delete from forum_likes
        where comment_id = #{commentId} and user_id = #{userId};
    </delete>

    <update id="updateForumLikes">
        update forum_comments
        <set>
            <choose>
                <when test="state == 'like'">
                    like_count = like_count + 1, update_time = #{updateTime}
                </when>

                <when test="state == 'unlike'">
                    like_count = like_count - 1, update_time = #{updateTime}
                </when>
            </choose>
        </set>
        where comment_id = #{commentId}
    </update>
</mapper>